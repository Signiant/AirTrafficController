
files:
  "/tmp/deploy_atc.sh":
    mode: "00555"
    owner: root
    group: root
    encoding: plain
    content: |
      #!/bin/bash
      ATC_URL=$ATC_RELEASE_URL
      ATC_MD5=$ATC_RELEASE_MD5
      ATC_PACKAGE=/tmp/atc.zip
      ATC_DIR=/usr/local/signiant-tools/atc
      ATC_TMP_DIR=/tmp/atc
      ATC_S3=$ATC_SCRIPTS_BUCKET

      if [ -z "$ATC_RELEASE_URL" ]; then
        logger "ATC: ATC_RELEASE_URL beanstalk parameter is not set."
        exit 1
      else
        logger "ATC: Release URL is: $ATC_URL"
      fi
      if [ -z "$ATC_RELEASE_MD5" ]; then
        logger "ATC: ATC_RELEASE_MD5 beanstalk parameter is not set."
        exit 1
      else
        logger "ATC: MD4 of release is : $ATC_MD5"
      fi
      if [ -z "$ATC_S3" ]; then
        logger "ATC: ATC_SCRIPTS_BUCKET beanstalk parameter is not set."
        exit 1
      else
        logger "ATC: Pulling scripts from bucket location: $ATC_S3"
      fi

      if [ -d "$ATC_DIR" ]; then
        logger "ATC: Directory $ATC_DIR was not found."
      fi

      wget --output-document=$ATC_PACKAGE $ATC_URL
      if [ "$?" -ne 0 ]; then
        logger "ATC: Download failed from $ATC_URL"
        exit 1
      fi

      echo "$ATC_MD5  $ATC_PACKAGE" > $ATC_PACKAGE.md5

      md5sum -c $ATC_PACKAGE.md5
      if [ "$?" -ne 0 ]; then
        logger "ATC: Failed md5 verification of $ATC_PACKAGE using md5 $ATC_MD5"
        exit 1
      fi

      mkdir $ATC_DIR

      unzip -o $ATC_PACKAGE -d $ATC_TMP_DIR
      if [ "$?" -ne 0 ]; then
        logger "ATC: Failed to unzip $ATC_PACKAGE"
        exit 1
      fi

      #Copy all ATC scripts to atc dir
      find $ATC_TMP_DIR -name "*.sh" -exec cp -t $ATC_DIR {} +

      rm -f $ATC_PACKAGE
      rm -rf $ATC_TMP_DIR
      logger "ATC: Removed downloaded package"

      echo "( [s3]=${ATC_SCRIPTS_BUCKET} [local]=/tmp/atc_scripts )" > ${ATC_DIR}/s3sync.dat

      exit 0

  "/usr/local/atc/s3sync.sh":
    mode: "00555"
    owner: root
    group: root
    encoding: plain
    content: |
      #!/bin/bash

      FOLDERS_MAP_FILE=$1

      declare -A folders

      if [ -z "$VERBOSE" ]; then
        VERBOSE=1
      fi

      echo "Verbose is $VERBOSE"

      echo "Processing paths from $FOLDERS_MAP_FILE"
      logger "S3SYNC: Processing paths from $FOLDERS_MAP_FILE"

      # Read in the folders from the input file
      while read -r line; do
        declare -A folders="$line"

        echo "S3SYNC: Syncing S3:${folders[s3]} => local:${folders[local]}"
        logger "S3SYNC: Syncing S3:${folders[s3]} => local:${folders[local]}"

        CMD="/usr/bin/aws s3 sync s3://${folders[s3]} ${folders[local]}"

        if [ $VERBOSE == 1 ]; then
          logger "Sync command: ${CMD}"
        fi

        OUTPUT=$($CMD)

        if [ $VERBOSE == 1 ]; then
          logger $OUTPUT
        fi

        if [[ $OUTPUT == *"download"* ]]; then
          echo "S3SYNC: New/Changed files were downloaded - setting marker"
          logger "S3SYNC: New/Changed files were downloaded - setting marker"
          if [ ! -e "${folders[local]}/updated" ]; then
            touch ${folders[local]}/updated
          fi
        else
          echo "No new/changed files were downloaded"
          logger "No new/changed files were downloaded"
        fi
      done < ${FOLDERS_MAP_FILE}

  "/usr/local/atc/public_key.pem":
    mode: "00400"
    owner: root
    group: root
    encoding: plain
    content: |
        -----BEGIN PUBLIC KEY-----
        ******INSERT YOUR PUBLIC KEY******
        -----END PUBLIC KEY-----

container_commands:
  01_get_atc:
    command: "/tmp/deploy_atc.sh 2>&1 | logger &"
    ignoreErrors: true
  02_make_scripts_dir:
    command: "mkdir /tmp/atc_scripts"
    ignoreErrors: true
  03_chown_atc:
    command: "chown -R root:root /tmp/atc_scripts; chown -R root:root /usr/local/atc"
    ignoreErrors: true
  04_chmod_atc:
    command: "chmod -R 700 /tmp/atc_scripts; chmod -R 700 /usr/local/atc"
    ignoreErrors: true
  05_cron_sync:
    command: "(crontab -l 2>/dev/null; echo '*/5 * * * * /usr/local/atc/s3sync.sh /usr/local/atc/s3sync.dat') | sort - | uniq - | crontab -"
    ignoreErrors: true
  06_cron_atc:
    command: "(crontab -l 2>/dev/null; echo '*/5 * * * * sleep 30; /usr/local/atc/execute_scripts.sh /usr/local/atc/public_key.pem /tmp/atc_scripts') | sort - | uniq - | crontab -"
    ignoreErrors: true
